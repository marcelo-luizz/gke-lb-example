apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: "ingress-ip"
    # kubernetes.io/ingress.allow-http: "false"
    # kubernetes.io/ingress.class: "gce"
    # ingress.gcp.kubernetes.io/pre-shared-cert: "dev-cert"
    # networking.gke.io/frontend-config: "my-frontend-config"
    # networking.gke.io/managed-certificates: lb-certificate
  #   networking.gke.io/v1beta1.FrontendConfig: ingress-security-config
spec:
  # defaultBackend:
  #   service:
  #     name: http-example
  #     port:
  #       number: 80
  rules:
  # - host: jenkins.devopsbrothers.fun
  - http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: jenkins-server
            port:
              number: 8080
        
      # - host: api.devopsbrothers.fun
      - path: /api/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: flask-api
            port:
              number: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-example
#   annotations:
#     # kubernetes.io/ingress.global-static-ip-name: <STATIC_IP_NAME> # replace with your static IP name
# spec:
#   rules:
#   # - host: jenkins.devopsbrothers.fun
#   - http:
#       paths:
#       - path: /login
#         pathType: Prefix
#         backend:
#           service:
#             name: backend-service
#             port:
#               name: http
#   # backend:
  #   service:
  #     name: default-backend
  #     port:
  #       name: http
  # backendConfig:
  #   enabled: true
  #   healthCheck:
  #     checkIntervalSec: 10
  #     timeoutSec: 5
  #     healthyThreshold: 3
  #     unhealthyThreshold: 5
  #     type: HTTP
  #     requestPath: /login
